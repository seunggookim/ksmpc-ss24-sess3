function JOB = myspm_art(JOB)
% JOB = myspm_art(JOB)
%
% performs ART to find outliers (frame-wise intensity Z>5.0; frame-wise motion>1.0 mm)
%
% JOB requires:
%  .global_threshold
%  .motion_threshold
%  .subjID
%  .dir_base
%  .name_epi
%
% (cc) 2015, sgKIM.  solleo@gmail.com  https://ggooo.wordpress.com

global overwrite; if isempty(overwrite), overwrite=0; end
output_suffix='';

%%%%%%%%%%%% ART PARAMETERS (edit to desired values) %%%%%%%%%%%%
global_mean=1;                % global mean type (1: Standard 2: User-defined Mask)
motion_file_type=0;           % motion file type (0: SPM .txt file 1: FSL .par file 2:Siemens .txt file)
if ~isfield(JOB,'global_threshold')
global_threshold=5.0;         % threshold for outlier detection based on global signal
else
global_threshold=JOB.global_threshold;
%   output_suffix=[output_suffix 'z',num2str(global_threshold,1)];
end
if ~isfield(JOB,'motion_threshold')
motion_threshold=1.0;         % threshold for outlier detection based on motion estimates
else
motion_threshold=JOB.motion_threshold;
%   output_suffix=[output_suffix 'm',num2str(motion_threshold,1)];
end
use_diff_motion=1;            % 1: uses scan-to-scan motion to determine outliers; 0: uses absolute motion
use_diff_global=1;            % 1: uses scan-to-scan global signal change to determine outliers; 0: uses absolute global signal values
use_norms=1;                  % 1: uses composite motion measure (largest voxel movement) to determine outliers; 0: uses raw motion measures (translation/rotation parameters)
mask_file=[];                 % set to user-defined mask file(s) for global signal estimation (if global_mean is set to 2)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

path0=pwd;
subjID = fsss_subjID(JOB.subjID);
output_suffix=sprintf('_%0.1fstd_%0.1fmm', global_threshold, motion_threshold);
numSubj=numel(subjID);
numOut=zeros(1,numSubj);
for i=1:numSubj
subjid = subjID{i};
path1=fullfile(JOB.dir_base,subjid);
[~,name1,~]=fileparts(JOB.fname_epi);
name0=name1;

cd(path1);
JOB.fname_epi = fullfile(path1, JOB.name_epi);
if isfield(JOB,'name_rp')
JOB.fname_rp = fullfile(path1, JOB.name_rp);
else
% remove prefix from SPM preproc
if strcmp(name1(1:2),'au') || strcmp(name1(1:2),'ua')
name1(1:2)=[];
elseif strcmp(name1(1),'a') || strcmp(name1(1),'u')
name1(1)=[];
end
JOB.fname_rp = fullfile(path1, ['rp_',name1,'.txt']);
end

fname_art=[path1,'/art_regression_outliers_',name1,output_suffix,'.mat'];

if ~exist(fname_art,'file') || ~~overwrite
fname_cfg = fullfile(JOB.dir_base, subjid, ['art_cfg_',name1,'.txt']);
fid = fopen(fname_cfg,'w');
fprintf(fid,'# Automatic script generated by %s\n',mfilename);
fprintf(fid,'# Users can edit this file and use\n');
fprintf(fid,'#   art(''sess_file'',''%s'');\n',fname_cfg);
fprintf(fid,'# to launch art using this configuration\n');

fprintf(fid,'sessions: %d\n',1);
fprintf(fid,'global_mean: %d\n',global_mean);
fprintf(fid,'global_threshold: %f\n',global_threshold);
fprintf(fid,'motion_threshold: %f\n',motion_threshold);
fprintf(fid,'motion_file_type: %d\n',motion_file_type);
fprintf(fid,'motion_fname_from_image_fname: 1\n');
fprintf(fid,'use_diff_motion: %d\n',use_diff_motion);
fprintf(fid,'use_diff_global: %d\n',use_diff_global);
fprintf(fid,'use_norms: %d\n',use_norms);
fprintf(fid,'output_dir: %s\n',path1);
if ~isempty(mask_file),fprintf(fid,'mask_file: %s\n',deblank(mask_file(n1,:)));end
fprintf(fid,'end\n');

fprintf(fid,'session 1 image %s\n', JOB.fname_epi);
fprintf(fid,'session 1 motion %s\n', JOB.fname_rp);

fprintf(fid,'end\n');
fclose(fid);

art('sess_file',fname_cfg);

% rename
movefile([path1,'/art_regression_outliers_',name0,'.mat'], ...
[path1,'/art_out_',name1,output_suffix,'.mat']);
movefile([path1,'/art_regression_outliers_and_movement_',name0,'.mat'], ...
[path1,'/art_out_mov_',name1,output_suffix,'.mat']);


% copy figures
if isfield(JOB,'dir_figure')
screen2png([path1,'/art_plot',output_suffix,'.png'],72);

[~,~]=mkdir(JOB.dir_figure);
copyfile([path1,'/art_plot',output_suffix,'.png'], ...
[JOB.dir_figure,'/art_plot',output_suffix,'_',subjid,'.png']);
end
close(gcf);

end
% count outliers
load([path1,'/art_out_',name1,output_suffix,'.mat']);
numOut(i)=size(R,2);
end

disp('## Number of outliers ##');
for i=1:numSubj
disp([subjID{i},': ',num2str(numOut(i))]);
end

if isfield(JOB,'dir_figure')
hf=figure;
barh(numOut);
P = spm_vol(JOB.fname_epi);
xlim([0 numel(P)]); xlabel('# of scans'); ylabel('Subj#');
set(gca,'ytick',[1:numSubj],'yticklabel',subjID,'ydir','rev')
legend('Outliers');
title(['ART-detected outliers with threshold of ',output_suffix(2:end)],'interp','none')
screen2png([JOB.dir_figure,'/art_outliers',output_suffix,'.png']);
end
cd(path0);
end
